buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }
}

plugins {
    id 'java-library'
    id 'application'
}

version = '1.0'
ext {
    appName = "Super Mario Bros"
    gdxVersion = '1.12.1'
    roboVMVersion = '2.3.20'
    box2DLightsVersion = '1.5'
    ashleyVersion = '1.7.4'
    aiVersion = '1.8.2'
    gdxControllersVersion = '2.2.1'
}

repositories {
    mavenLocal()
    mavenCentral()
    google()
    gradlePluginPortal()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    maven { url "https://jitpack.io" }
}

dependencies {
    // Core dependencies
    api "com.badlogicgames.gdx:gdx:$gdxVersion"
    api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
    implementation "org.springframework:spring-context:5.3.22"
    implementation "jakarta.validation:jakarta.validation-api:3.0.2"
    implementation "org.projectlombok:lombok:1.18.30"
    annotationProcessor "org.projectlombok:lombok:1.18.30"
    implementation "at.favre.lib:bcrypt:0.9.0"
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.2'
    implementation 'org.hibernate.validator:hibernate-validator:7.0.2.Final'
    implementation 'jakarta.el:jakarta.el-api:4.0.0'
    implementation 'org.glassfish:jakarta.el:4.0.0'

    // Desktop dependencies
    api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
    api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

application {
    mainClass = 'com.kulikov.DesktopLauncher'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs += '-parameters'
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes(
                'Main-Class': 'com.kulikov.DesktopLauncher'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}